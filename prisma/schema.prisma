generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  email        String  @unique(map: "email")
  image        String  @default("")
  isSubscribed Boolean @default(false)
  password     String?
  provider     String  @default("credentials")
  username     String? @unique(map: "username")
  chatSessions ChatSession[]
  apiLimit     UserApiLimit?
}

enum Role{
  USER
  ASSISTANT
}

enum Type{
  CONVERSATION
  CODE
}

model ChatSession{
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @db.ObjectId
  messages  Message[]
  type      Type    @default(CONVERSATION)

  @@unique([userId,type])
}

model Message {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  role         Role     @default(USER)
  content      String   
  createdAt    DateTime @default(now())
  chatSession  ChatSession? @relation(fields: [chatSessionId], references: [id])
  chatSessionId String? @db.ObjectId
}


model UserApiLimit{
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  userId       String  @unique @db.ObjectId
  user         User    @relation(fields: [userId],references: [id])
  count        Int     @default(0)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}